"parent component"
<script setup>
const checkObject = reactive({});

const appendCheckKey = (checkKey) =>{
  checkObject.currentGuess = currentGuess;
  checkObject.keyArr = checkKey;
  checkObject.guessArr = check.value;
  console.log(checkObject)
}
<script>

"Child component"
<script setup>
import { onUpdated } from 'vue';

defineProps({
  checkObject: Object
});

onUpdated((checkObject) => {
  console.log('recieved')
  let buttons = document.querySelectorAll('.key-key')
  for (let button of buttons) {
    for (let i = 0; i < 5; i++) {
      if (button.innerHTML == checkObject.guessArr[i]) {
        if (checkObject.keyArr[i] == 'yes') {
          button.style.backgroundColor = '#b49f3b';
        }
        if (checkObject.keyArr[i] == 'no') {
          button.style.backgroundColor = '#3a3a3c';
        }
        if (checkObject.keyArr[i] == 'same') {
          button.style.backgroundColor = '#538d4e';
        }
        button.disabled = true;
      }
    }
  }
});
</script>



const appendCheckKey = (checkKey) =>{
  let temp = {};
  checkObject.value.currentGuess = currentGuess;
  checkObject.value.keyArr = checkKey;
  checkObject.value.guessArr = check.value;
  console.log(checkObject.value)
}